obs.stat
delta
Sigma.delta
Sigma.delta.inv
Sigma.delta.inv <- MASS::ginv(Sigma.delta)
Sigma.delta.inv
## start from beta.est and beta.cov
D <- length(drug.list)
K <- length(trait.list)
m <- length(MAF)
snp.list <- names(MAF)
drug_trait <- expand.grid(trait = 1:K, drug = 1:D)
D
MAF[names(MAF) == MAC10.bygrp[SNP.id]]
m <- 1
snp.list <- "SNP6"
drug_trait <- expand.grid(trait = 1:K, drug = 1:D)
ref
drugStruct
if (is.null(drugStruct)){
# message("Assume the effects among environmental groups are independent")
lambda <- expand.grid(lambdaA = rho.trait, lambdaC = rho.SNP, lambdaD = 0)
}else if(drugStruct == "AR1") {
# message("Assume the first-order autoregressive structure for the effects among environmental groups")
lambda <- expand.grid(lambdaA = rho.trait, lambdaC = rho.SNP, lambdaD = rho.drug)
}
lambda
KA
diffweight
if(diffweight) {
# message("Use different weights for rare and common variants:")
if(is.null(weight.commonSNP)){
# message(paste0("No input of weight for common variants, use the default weight of dbeta(MAF,0.5,0.5) for common variants and dbeta(MAF,", paste0(weight.SNP, collapse = ","),  ") for rare variants"))
weight.commonSNP <- c(0.5, 0.5)
}else{
message(paste0("Use the weight of dbeta(MAF,", paste0(weight.SNP, collapse = ","),  ") for rare variants and the weight of dbeta(MAF,", paste0(weight.commonSNP, collapse = ","), ") for common variants"))
}
common.SNP <- which(MAF >= threshold)
}
KC <- diag(m)
MAF <- MAF[order(match(names(MAF), snp.list))]
MAF
snp.list
MAF = MAF[names(MAF) == MAC10.bygrp[SNP.id]]
MAF
MAF <- MAF[order(match(names(MAF), snp.list))]
MAF
diffweight
if(diffweight) {
diag.tmp <- numeric(m)
if(length(common.SNP) != 0) {
diag.tmp[common.SNP] <- Beta.Weights(MAF[common.SNP], weights.beta = weight.commonSNP)
diag.tmp[-common.SNP] <- Beta.Weights(MAF[-common.SNP], weights.beta = weight.SNP)
}else{
diag.tmp <- Beta.Weights(MAF, weights.beta = weight.SNP)
}
}else{
diag.tmp <- Beta.Weights(MAF, weights.beta = weight.SNP) #weights matrix for SNPs
}
diag.tmp
diag(KC) <- diag.tmp
WA <- diag(K)
KC
WA
JC <- matrix(1, nrow = m, ncol = m)
ii <- 1
lambdaA <- lambda[ii, 1]
A <- WA %*% apply(KA, 2, combMTAR, rho = lambdaA) %*% WA
A
lambdaC <- lambda[ii, 2]
C <- diag(KC) %*% t(diag(KC)) * ((1 - lambdaC) * diag(m) + lambdaC * JC)
C
colnames(C) <- snp.list
C
B_D <- ar1_cor(D-1, lambda[ii, 3])
B_D
trait.ind <- expand.grid(row.ind = 1:K, column.ind = 1:K)
update.C <- nonpolymorphic.fn(C, obs.stat, GEI = TRUE, nonpoly.list = nonpoly.list)
update.C
if(m == 1) {
update.C <- C
}else{
update.C <- nonpolymorphic.fn(C, obs.stat, GEI = TRUE, nonpoly.list = nonpoly.list)
}
update.C
B.all <- NULL
for(d1 in setdiff(1:D, ref)) {
B.bydrug <- NULL
for(d2 in setdiff(1:D, ref)) {
B <- NULL
for (col_id in 1:K) {
B.col <- NULL
index <- which(trait.ind$column.ind == col_id)
row_id <- trait.ind[index, 1]
for (iter in 1:length(index)) {
if(m == 1) {
B.col <- rbind(B.col, A[row_id[iter], col_id] *
update.C[[d1]][[index[iter]]])
}else{
B.col <- rbind(B.col, A[row_id[iter], col_id] * update.C)
}
}
B <- cbind(B, B.col)
}
B.bydrug <- cbind(B.bydrug, B_D[d1, d2] * B)
}
B.all <- rbind(B.all, B.bydrug)
}
B.all
m
B.all <- NULL
for(d1 in setdiff(1:D, ref)) {
B.bydrug <- NULL
for(d2 in setdiff(1:D, ref)) {
B <- NULL
for (col_id in 1:K) {
B.col <- NULL
index <- which(trait.ind$column.ind == col_id)
row_id <- trait.ind[index, 1]
for (iter in 1:length(index)) {
if(m > 1) {
B.col <- rbind(B.col, A[row_id[iter], col_id] *
update.C[[d1]][[index[iter]]])
}else{
B.col <- rbind(B.col, A[row_id[iter], col_id] * update.C)
}
}
B <- cbind(B, B.col)
}
B.bydrug <- cbind(B.bydrug, B_D[d1, d2] * B)
}
B.all <- rbind(B.all, B.bydrug)
}
B.all
(length(is.na(delta)) != 0)
delta
length(is.na(delta))
delta
length(is.na(delta))
length(!is.na(delta)) != 0
length(which(is.na(delta))) != 0
B.all
B.all[!is.na(delta), !is.na(delta), drop = FALSE]
length(which(is.na(delta))) != 0
B.all[!is.na(delta), !is.na(delta), drop = FALSE]
MAGENTA.eq4.sumstats <- function(beta.sumstats.obj, MAF, KA, drugStruct = "AR1",
trait.list, drug.list,test,ref = NULL,
R.C, cct = TRUE,
diffweight = FALSE,
threshold = 0.05,
weight.commonSNP = NULL,
rho.SNP = c(0, 0.5, 1),
rho.trait = c(0.5, 5, 1),
rho.drug = c(0, 0.5, 1),
weight.SNP = c(1, 25))
{
if(test == "joint") {
beta.est <- beta.sumstats.obj$beta.est
beta.cov <- beta.sumstats.obj$beta.cov
Sigma.beta.inv <- MASS::ginv(beta.cov)
}else if(test == "GEI") {
obs.stat <- beta.sumstats.obj$obs.stat
nonpoly.list <- beta.sumstats.obj$nonpoly.list
delta <- beta.sumstats.obj$delta
Sigma.delta <- beta.sumstats.obj$Sigma.delta
Sigma.delta.inv <- MASS::ginv(Sigma.delta)
}
## start from beta.est and beta.cov
D <- length(drug.list)
K <- length(trait.list)
m <- length(MAF)
snp.list <- names(MAF)
drug_trait <- expand.grid(trait = 1:K, drug = 1:D)
if(is.null(ref)) {
ref <- D
}
if (is.null(drugStruct)){
# message("Assume the effects among environmental groups are independent")
lambda <- expand.grid(lambdaA = rho.trait, lambdaC = rho.SNP, lambdaD = 0)
}else if(drugStruct == "AR1") {
# message("Assume the first-order autoregressive structure for the effects among environmental groups")
lambda <- expand.grid(lambdaA = rho.trait, lambdaC = rho.SNP, lambdaD = rho.drug)
}
if (is.null(KA)) {
message("Without the input of genetic correlation information, an exchangeable correlation structure among traits is assumed in MAGENTA.")
KA <- diag(K)
}
# message("Conducting MAGENTA analysis ...")
if(diffweight) {
# message("Use different weights for rare and common variants:")
if(is.null(weight.commonSNP)){
# message(paste0("No input of weight for common variants, use the default weight of dbeta(MAF,0.5,0.5) for common variants and dbeta(MAF,", paste0(weight.SNP, collapse = ","),  ") for rare variants"))
weight.commonSNP <- c(0.5, 0.5)
}else{
message(paste0("Use the weight of dbeta(MAF,", paste0(weight.SNP, collapse = ","),  ") for rare variants and the weight of dbeta(MAF,", paste0(weight.commonSNP, collapse = ","), ") for common variants"))
}
common.SNP <- which(MAF >= threshold)
}
KC <- diag(m)
MAF <- MAF[order(match(names(MAF), snp.list))]
if(diffweight) {
diag.tmp <- numeric(m)
if(length(common.SNP) != 0) {
diag.tmp[common.SNP] <- Beta.Weights(MAF[common.SNP], weights.beta = weight.commonSNP)
diag.tmp[-common.SNP] <- Beta.Weights(MAF[-common.SNP], weights.beta = weight.SNP)
}else{
diag.tmp <- Beta.Weights(MAF, weights.beta = weight.SNP)
}
}else{
diag.tmp <- Beta.Weights(MAF, weights.beta = weight.SNP) #weights matrix for SNPs
}
diag(KC) <- diag.tmp
WA <- diag(K)
JC <- matrix(1, nrow = m, ncol = m)
p.obs <- NULL
for (ii in 1:nrow(lambda)) {
lambdaA <- lambda[ii, 1]
A <- WA %*% apply(KA, 2, combMTAR, rho = lambdaA) %*% WA
lambdaC <- lambda[ii, 2]
C <- diag(KC) %*% t(diag(KC)) * ((1 - lambdaC) * diag(m) + lambdaC * JC)
if(test == "joint") {
B_D <- ar1_cor(D, lambda[ii, 3])
B.all <- kronecker(B_D, kronecker(A, C))
R <- chol(B.all, pivot = TRUE)
r <- attr(R, "rank")
if (r < nrow(B.all))
R[(r + 1):nrow(B.all), (r + 1):nrow(B.all)] <- 0
oo <- order(attr(R, "pivot"))
unpivQ <- R[, oo]
# rho <- try(Get_Lambda(unpivQ %*% Sigma.inv %*% t(unpivQ)), silent = TRUE)
rho <- try(Get_Lambda(unpivQ %*% Sigma.beta.inv %*% t(unpivQ)), silent = TRUE)
if (!inherits(rho, "try-error")) {
# part1 <-t(U.all) %*% U.inv %*%V.diag.all
part1 <- t(beta.est) %*% Sigma.beta.inv
Q <- as.numeric(part1 %*% B.all %*% t(part1))
pvalues <- Get_PValue.Lambda(rho, Q)$p.value
# print(pvalues)
p.obs <- c(p.obs, pvalues)
}
}else if(test == "GEI"){
colnames(C) <- snp.list
B_D <- ar1_cor(D-1, lambda[ii, 3])
trait.ind <- expand.grid(row.ind = 1:K, column.ind = 1:K)
if(m == 1) {
update.C <- C
}else{
update.C <- nonpolymorphic.fn(C, obs.stat, GEI = TRUE, nonpoly.list = nonpoly.list)
}
B.all <- NULL
for(d1 in setdiff(1:D, ref)) {
B.bydrug <- NULL
for(d2 in setdiff(1:D, ref)) {
B <- NULL
for (col_id in 1:K) {
B.col <- NULL
index <- which(trait.ind$column.ind == col_id)
row_id <- trait.ind[index, 1]
for (iter in 1:length(index)) {
if(m > 1) {
B.col <- rbind(B.col, A[row_id[iter], col_id] *
update.C[[d1]][[index[iter]]])
}else{
B.col <- rbind(B.col, A[row_id[iter], col_id] * update.C)
}
}
B <- cbind(B, B.col)
}
B.bydrug <- cbind(B.bydrug, B_D[d1, d2] * B)
}
B.all <- rbind(B.all, B.bydrug)
}
B.all <- B.all[!is.na(delta), !is.na(delta), drop = FALSE]
R <- chol(B.all, pivot = TRUE)
r <- attr(R, "rank")
if (r < nrow(B.all))
R[(r + 1):nrow(B.all), (r + 1):nrow(B.all)] <- 0
oo <- order(attr(R, "pivot"))
unpivQ <- R[, oo]
rho <- try(SKAT:::Get_Lambda(unpivQ %*% Sigma.delta.inv %*% t(unpivQ)), silent = TRUE)
# print(c(ii, class(rho)))
if (!inherits(rho, "try-error")) {
part1 <- t(delta[!is.na(delta)]) %*% Sigma.delta.inv
Q <- as.numeric(part1 %*% B.all %*% t(part1))
pvalues <- SKAT:::Get_PValue.Lambda(rho, Q)$p.value
p.obs <- c(p.obs, pvalues)
}
}
}
if(cct) {
MAGENTA.cct.p <- list(p = ACAT(p.obs[which(p.obs < 1)]),
rhoS.min = lambda[which.min(p.obs), 2],
rhoT.min = lambda[which.min(p.obs), 1],
rhoE.min = lambda[which.min(p.obs), 3])
}else{
MAGENTA.cct.p <- list(p = p.obs,
rhoS.min = lambda[which.min(p.obs), 2],
rhoT.min = lambda[which.min(p.obs), 1],
rhoE.min = lambda[which.min(p.obs), 3])
}
return(MAGENTA.cct.p)
}
MAGENTA.eq4.sumstats(beta.sumstats.obj = beta.sumstats.MTSV,
MAF = MAF[names(MAF) == MAC10.bygrp[SNP.id]],
KA = KA,test = test, ref = ref,
R.C = R.C[rownames(R.C) == MAC10.bygrp[SNP.id],
colnames(R.C) == MAC10.bygrp[SNP.id], drop = FALSE],
drugStruct = drugStruct,
trait.list = trait.list,
drug.list = drug.list,
cct = cct,
diffweight = diffweight,
threshold = threshold,
weight.commonSNP = weight.commonSNP,
rho.SNP = 1, rho.trait = rho.trait,
rho.drug = rho.drug, weight.SNP = weight.SNP
)$p
k <- 1
SNP.range <- grep(paste0(MAC10.bygrp[SNP.id], ":", k, ":"), names(beta.sumstats.obj$delta))
SNP.range
beta.sumstats.STSV <- list(delta = beta.sumstats.obj$delta[SNP.range],
Sigma.delta = beta.sumstats.obj$Sigma.delta[SNP.range, SNP.range, drop = FALSE],
obs.stat = sapply(obs.stat.SV, function(x) x[k], simplify = FALSE),
nonpoly.list = beta.sumstats.obj$nonpoly.list[k])
beta.sumstats.STSV
MAGENTA.eq4.sumstats(beta.sumstats.obj = beta.sumstats.STSV,
MAF =  MAF[names(MAF) == MAC10.bygrp[SNP.id]],
KA = matrix(1),test = test, ref = ref,
R.C = R.C[rownames(R.C) == MAC10.bygrp[SNP.id],
colnames(R.C) == MAC10.bygrp[SNP.id], drop = FALSE],
drugStruct = drugStruct,
trait.list = trait.list[k],
drug.list = drug.list,
cct = cct,
diffweight = diffweight,
threshold = threshold,
weight.commonSNP = weight.commonSNP,
rho.SNP = 1, rho.trait = 1,
rho.drug = rho.drug, weight.SNP = weight.SNP
)
MTSV.p <- rep(NA, length(MAC10.bygrp))
STSV.p <- matrix(NA, length(MAC10.bygrp), K)
for(SNP.id in 1:length(MAC10.bygrp)) {
## MTSV p value
obs.stat.SV <- list()
for(d in 1:D) {
obs.stat.SV.tmp <- list()
for(k in 1:K) {
obs.stat.SV.tmp[[k]] <- list(U = beta.sumstats.obj$obs.stat[[d]][[k]]$U[names(beta.sumstats.obj$obs.stat[[d]][[k]]$U) == MAC10.bygrp[SNP.id]],
V = beta.sumstats.obj$obs.stat[[d]][[k]]$V[names(beta.sumstats.obj$obs.stat[[d]][[k]]$U) == MAC10.bygrp[SNP.id],
names(beta.sumstats.obj$obs.stat[[d]][[k]]$U) == MAC10.bygrp[SNP.id], drop = FALSE])
}
obs.stat.SV[[d]] <- obs.stat.SV.tmp
}
SNP.range <- grep(paste0(MAC10.bygrp[SNP.id], ":"), names(beta.sumstats.obj$delta))
beta.sumstats.MTSV <- list(delta = beta.sumstats.obj$delta[SNP.range],
Sigma.delta = beta.sumstats.obj$Sigma.delta[SNP.range, SNP.range, drop = FALSE],
obs.stat = obs.stat.SV,
nonpoly.list = beta.sumstats.obj$nonpoly.list)
MTSV.p[SNP.id] <- try(MAGENTA.eq4.sumstats(beta.sumstats.obj = beta.sumstats.MTSV,
MAF = MAF[names(MAF) == MAC10.bygrp[SNP.id]],
KA = KA,test = test, ref = ref,
R.C = R.C[rownames(R.C) == MAC10.bygrp[SNP.id],
colnames(R.C) == MAC10.bygrp[SNP.id], drop = FALSE],
drugStruct = drugStruct,
trait.list = trait.list,
drug.list = drug.list,
cct = cct,
diffweight = diffweight,
threshold = threshold,
weight.commonSNP = weight.commonSNP,
rho.SNP = 1, rho.trait = rho.trait,
rho.drug = rho.drug, weight.SNP = weight.SNP
)$p, silent = T)
## STSV p value
for(k in 1:K) {
SNP.range <- grep(paste0(MAC10.bygrp[SNP.id], ":", k, ":"), names(beta.sumstats.obj$delta))
beta.sumstats.STSV <- list(delta = beta.sumstats.obj$delta[SNP.range],
Sigma.delta = beta.sumstats.obj$Sigma.delta[SNP.range, SNP.range, drop = FALSE],
obs.stat = sapply(obs.stat.SV, function(x) x[k], simplify = FALSE),
nonpoly.list = beta.sumstats.obj$nonpoly.list[k])
STSV.p[SNP.id, k] <- try(MAGENTA.eq4.sumstats(beta.sumstats.obj = beta.sumstats.STSV,
MAF =  MAF[names(MAF) == MAC10.bygrp[SNP.id]],
KA = matrix(1),test = test, ref = ref,
R.C = R.C[rownames(R.C) == MAC10.bygrp[SNP.id],
colnames(R.C) == MAC10.bygrp[SNP.id], drop = FALSE],
drugStruct = drugStruct,
trait.list = trait.list[k],
drug.list = drug.list,
cct = cct,
diffweight = diffweight,
threshold = threshold,
weight.commonSNP = weight.commonSNP,
rho.SNP = 1, rho.trait = 1,
rho.drug = rho.drug, weight.SNP = weight.SNP
)$p, silent = T)
}
}
names(MTSV.p) <- MAC10.bygrp
rownames(STSV.p) <- MAC10.bygrp
colnames(STSV.p) <- trait.list
STSV.p
MTSV.p
SNP.id <- 2
## MTSV p value
obs.stat.SV <- list()
for(d in 1:D) {
obs.stat.SV.tmp <- list()
for(k in 1:K) {
obs.stat.SV.tmp[[k]] <- list(U = beta.sumstats.obj$obs.stat[[d]][[k]]$U[names(beta.sumstats.obj$obs.stat[[d]][[k]]$U) == MAC10.bygrp[SNP.id]],
V = beta.sumstats.obj$obs.stat[[d]][[k]]$V[names(beta.sumstats.obj$obs.stat[[d]][[k]]$U) == MAC10.bygrp[SNP.id],
names(beta.sumstats.obj$obs.stat[[d]][[k]]$U) == MAC10.bygrp[SNP.id], drop = FALSE])
}
obs.stat.SV[[d]] <- obs.stat.SV.tmp
}
obs.stat.SV
SNP.range <- grep(paste0(MAC10.bygrp[SNP.id], ":"), names(beta.sumstats.obj$delta))
SNP.range
beta.sumstats.MTSV <- list(delta = beta.sumstats.obj$delta[SNP.range],
Sigma.delta = beta.sumstats.obj$Sigma.delta[SNP.range, SNP.range, drop = FALSE],
obs.stat = obs.stat.SV,
nonpoly.list = beta.sumstats.obj$nonpoly.list)
beta.sumstats.MTSV
## start from the summary statistics data ##
load("/home/luolan2/MAGENTA/data/sumstats_data.rda")
names(sumstats.dat)
attach(sumstats.dat)
MAF
rm(list = ls())
source("/home/luolan2/MAGENTA/R/sumstats.R")
source("/home/luolan2/MAGENTA/R/misc.R")
source("/home/luolan2/MAGENTA/R/other.R")
source("/home/luolan2/MAGENTA/R/important.R")
source("/home/luolan2/MAGENTA/R/MAGENTA.R")
source("/home/luolan2/MAGENTA/R/ACAT.R")
load("/home/luolan2/MAGENTA/data/rawdata.rda")
names(rawdata)
attach(rawdata)
head(dat)
head(geno.dat)
## data input
>>>>>>> 1acaa07efa8608a46c52ce8a09843a12e3dbcfe1
K <- 3
KA <- matrix(c(1, -0.03, 0.3, -0.03, 1, -0.535, 0.3, -0.535, 1), byrow = T, nrow = 3)
rownames(KA) <- colnames(KA) <- paste0("Trait", 1:K)
trait.list = paste0("Trait", 1:K)
drug.list = paste0("Drug", 0:1)
D <- 2
<<<<<<< HEAD
# source("/home/luolan2/MTAR_PGx/MAGENTA_fns.R")
source("/home/luolan2/MAGENTA/R/sumstats.R")
source("/home/luolan2/MAGENTA/R/sumstats_ongoing.R")
source("/home/luolan2/MAGENTA/R/misc.R")
source("/home/luolan2/MAGENTA/R/other.R")
source("/home/luolan2/MAGENTA/R/MAGENTA.R")
source("/home/luolan2/MAGENTA/R/ACAT.R")
source("/home/luolan2/MAGENTA/R/old_MAGENTA.R")
load("/home/luolan2/MAGENTA/data/sumstats_data.rda")
names(sumstats.dat)
attach(sumstats.dat)
zeta.ret <- Get_zeta(common.sumstats = common.sumstats, trait.list = paste("Trait", 1:K))
names(zeta.ret)
zeta.ret
load("/home/luolan2/MAGENTA/data/sumstats_data.rda")
names(sumstats.dat)
attach(sumstats.dat)
all.equal(common.sumstats, sumstats.dat$common.sumstats)
beta.sumstats.obj2 <- Get_beta_cov_UV(sumstats = sumstats, MAF = MAF, R.C = R.C,
zeta.ret = zeta.ret, KA = KA,
test = "joint",
trait.list = paste0("Trait", 1:K))
=======
load("/home/luolan2/MAGENTA/data/sumstats_data.rda")
names(sumstats.dat)
attach(sumstats.dat)
MAF
str(common.sumstats)
zeta.ret <- Get_zeta(common.sumstats = common.sumstats, trait.list = paste("Trait", 1:K))
# zeta.ret
str(sumstats) ## variant-level score summary statistics U and V as input data, generated by cal.sum, zero means that SNP is a non-polymorphic SNP for trait k and environmental group d
#prepare the summary statistics for joint test using trait-specific score summary statistics
beta.sumstats.obj <- Get_beta_cov_UV(sumstats = sumstats, MAF = MAF, R.C = R.C,
zeta.ret = zeta.ret, KA = KA,
test = "joint",
trait.list = paste0("Trait", 1:K))
names(beta.sumstats.obj)
MAGENTA.eq4.4cat.sumstats(beta.sumstats.obj = beta.sumstats.obj,
MAF = MAF, KA = KA,MAC10.bygrp = joint.MAC10,
drugStruct = "AR1", test = "joint",
trait.list, drug.list,
output = "everything",
R.C = R.C)
#prepare the summary statistics for joint test using trait-specific score summary statistics
beta.sumstats.obj <- Get_beta_cov_UV(sumstats = sumstats, MAF = MAF, R.C = R.C,
zeta.ret = zeta.ret, KA = KA,
test = "GEI",
trait.list = paste0("Trait", 1:K))
names(beta.sumstats.obj)
## same as MAGENTA.GEI.way1(sumstats = sumstats, MAF = MAF, KA = KA, drugStruct = "AR1", R.C = R.C, zeta = zeta.ret$zeta.GE, ref = D)
MAGENTA.eq4.sumstats(beta.sumstats.obj = beta.sumstats.obj,
MAF,test = "GEI", ref = D,
KA = KA,
drugStruct = "AR1",
trait.list = trait.list,
drug.list = drug.list,
R.C = R.C)
MAGENTA.eq4.4cat.sumstats(beta.sumstats.obj = beta.sumstats.obj,
MAF = MAF, KA = KA,MAC10.bygrp = GEI.MAC10,
drugStruct = "AR1", test = "GEI", ref = D,
trait.list, drug.list,
output = "everything",
R.C = R.C)
>>>>>>> 1acaa07efa8608a46c52ce8a09843a12e3dbcfe1
